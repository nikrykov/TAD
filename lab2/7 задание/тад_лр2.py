# -*- coding: utf-8 -*-
"""ТАД ЛР2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mD1O87RAHC7sXPzPPG7Cl0q4KzLBGoU5
"""

from google.colab import files
# Загрузка XML-документа
upload = files.upload()
from lxml import etree
xml_file = 'schedule.xml'
xml_tree = etree.parse(xml_file)

"""**Для выполнения XPath-запросов**"""

# a. Получить все занятия на данной неделе
result_a = xml_tree.xpath("//lesson")
for lesson in result_a:
    print(f"Предмет: {lesson.find('subject').text}")
    print(f"Аудитория: {lesson.find('classroom').text}")
    print(f"Преподаватель: {lesson.find('teacher').text}")
    print(f"Начало занятия: {lesson.find('start_time').text}")
    print(f"Окончание занятия: {lesson.find('end_time').text}")
    print(f"Тип занятия: {lesson.find('type').text}")
    print("---")

# b. Получить все аудитории, в которых проходят занятия
result_b = xml_tree.xpath("distinct-value(//classroom/text())")
print(result_b)

# c. Получить все практические занятия на неделе
result_c = xml_tree.xpath("//lesson[type='практика']")
for lesson in result_c:
    print(f"Предмет: {lesson.find('subject').text}")
    print(f"Аудитория: {lesson.find('classroom').text}")
    print(f"Преподаватель: {lesson.find('teacher').text}")
    print(f"Начало занятия: {lesson.find('start_time').text}")
    print(f"Окончание занятия: {lesson.find('end_time').text}")
    print(f"Тип занятия: {lesson.find('type').text}")
    print("---")

# d. Получить все лекции, проводимые в указанной аудитории
classroom = input("Введите номер аудитории: ")
result_d = xml_tree.xpath(f"//lesson[type='лекция' and classroom='{classroom}']")
for lesson in result_d:
    print(f"Предмет: {lesson.find('subject').text}")
    print(f"Аудитория: {lesson.find('classroom').text}")
    print(f"Преподаватель: {lesson.find('teacher').text}")
    print(f"Начало занятия: {lesson.find('start_time').text}")
    print(f"Окончание занятия: {lesson.find('end_time').text}")
    print(f"Тип занятия: {lesson.find('type').text}")
    print("---")

# e. Получить список всех преподавателей, проводящих практики в указанной аудитории
classroom = input("Введите номер аудитории: ")
result_e = xml_tree.xpath(f"//lesson[type='практика' and classroom='{classroom}']/teacher/text()")
print(result_e)

# f. Получить последнее занятие для каждого дня недели
result_f = xml_tree.xpath("//day/lesson[last()]")
for lesson in result_f:
    print(f"День недели: {lesson.getparent().get('name')}")
    print(f"Предмет: {lesson.find('subject').text}")
    print("---")

# g. Получить общее количество занятий за всю неделю
result_g = xml_tree.xpath("count(//lesson)")
print(f"Общее количество занятий за неделю: {result_g}")

"""**Для выполнения преобразования xslt-файла к текстовому документу**"""

upload = files.upload()
# from lxml import etree

# # Загрузка XML-документа
# xml_file = 'schedule.xml'
# xml_tree = etree.parse(xml_file)

xslt_txt = "transformToTxt.xslt"
with open(xslt_txt) as f:
    content_xslt = f.read()

xslt_transform_txt = etree.XSLT(etree.XML(content_xslt))
result_txt = xslt_transform_txt(xml_tree)

# Сохранение результатов XSLT-преобразования в текстовый файл
output_txt_file = 'schedule.txt'
with open(output_txt_file, 'w', encoding='UTF-8') as output_txt:
    output_txt.write(str(result_txt))

"""**Для выполнения преобразования xslt-файла к html-документу**"""

upload = files.upload()
# from lxml import etree

# # Загрузка XML-документа
# xml_file = 'schedule.xml'
# xml_tree = etree.parse(xml_file)
xslt_html = "transformToHtml.xslt"
with open(xslt_html) as f:
    content_xslt = f.read()
xslt_transform_html = etree.XSLT(etree.XML(content_xslt))
result_html = xslt_transform_html(xml_tree)

# Сохранение результатов XSLT-преобразования в HTML-файл
output_html_file = 'schedule.html'
with open(output_html_file, 'wb') as output_html:
    output_html.write(etree.tostring(result_html, pretty_print=True))